package com.example.cryptoproject.Function

import kotlin.random.Random

open class MetaData(password: String) {

    private val password: String

    init {
        this.password = password
    }

    val rndSeek = Random(IntSeek())

    private fun IntSeek(): Int {
        var i = 0
        password.forEach { i = +it.toInt() }
        return i
    }

    protected val hashfunInput = mapOf<String, Byte>(
        Pair("MD5", 0),
        Pair("SHA-1", 1),
        Pair("SHA-256", 2),
        Pair("SHA-512", 3),
        Pair("GOST3411", 4),
        Pair("GOST3411-2012-256", 5),
        Pair("GOST3411-2012-512", 6),
        Pair("KECCAK-224", 7),
        Pair("KECCAK-288", 8),
        Pair("KECCAK-256", 9),
        Pair("KECCAK-384", 10),
        Pair("KECCAK-512", 11),
        Pair("MD2", 12),
        Pair("MD4", 13),
        Pair("RIPEMD128", 16),
        Pair("RIPEMD160", 17),
        Pair("RIPEMD256", 18),
        Pair("RIPEMD320", 19),
        Pair("SHA-224", 20),
        Pair("SHA-384", 22),
        Pair("SHA-512/224", 24),
        Pair("SHA-512/256", 25),
        Pair("SHA3-224", 26),
        Pair("SHA3-256", 27),
        Pair("SHA3-384", 28),
        Pair("SHA3-512", 29),
        Pair("2.16.840.1.101.3.4.2.7", 30),
        Pair("OID.2.16.840.1.101.3.4.2.7", 31),
        Pair("2.16.840.1.101.3.4.2.8", 32),
        Pair("OID.2.16.840.1.101.3.4.2.8", 33),
        Pair("2.16.840.1.101.3.4.2.9", 34),
        Pair("OID.2.16.840.1.101.3.4.2.9", 35),
        Pair("2.16.840.1.101.3.4.2.10", 36),
        Pair("OID.2.16.840.1.101.3.4.2.10", 37),
        Pair("Skein-256-128", 38),
        Pair("Skein-256-160", 39),
        Pair("Skein-256-224", 40),
        Pair("Skein-256-256", 41),
        Pair("Skein-512-128", 42),
        Pair("Skein-512-160", 43),
        Pair("Skein-512-224", 44),
        Pair("Skein-512-256", 45),
        Pair("Skein-512-384", 46),
        Pair("Skein-512-512", 47),
        Pair("Skein-1024-384", 48),
        Pair("Skein-1024-512", 49),
        Pair("Skein-1024-1024", 50),
        Pair("SM3", 51),
        Pair("TIGER", 52),
        Pair("WHIRLPOOL", 53),
        Pair("BLAKE2B-512", 54),
        Pair("BLAKE2B-384", 55),
        Pair("BLAKE2B-256", 56),
        Pair("BLAKE2B-160", 57),
        Pair("BLAKE2S-256", 58),
        Pair("BLAKE2S-224", 59),
        Pair("BLAKE2S-160", 60),
        Pair("BLAKE2S-128", 61),
        Pair("DSTU7564-256", 62),
        Pair("DSTU7564-384", 63),
        Pair("DSTU7564-512", 64),
        Pair("1.2.804.2.1.1.1.1.2.2.1", 65),
        Pair("OID.1.2.804.2.1.1.1.1.2.2.1", 66),
        Pair("1.2.804.2.1.1.1.1.2.2.2", 67),
        Pair("OID.1.2.804.2.1.1.1.1.2.2.2", 68),
        Pair("1.2.804.2.1.1.1.1.2.2.3", 69),
        Pair("OID.1.2.804.2.1.1.1.1.2.2.3", 70)
    )

    protected val cryptofunInput = mapOf<String, Byte>(
        Pair("AES", 0),
        Pair("Blowfish", 1),
        Pair("DES", 2),
        Pair("DESede", 3),
        Pair("RC4", 4),
        Pair("Camellia", 5),
        Pair("CAST5", 6),
        Pair("CAST6", 7),
        Pair("GOST28147", 8),
        Pair("IDEA", 9),
        Pair("Grain128", 10),
        Pair("Noekeon", 11),
        Pair("Rijndael", 12),
        Pair("SEED", 13),
        Pair("Shacal2", 14),
        Pair("Serpent", 15),
        Pair("Skipjack", 16),
        Pair("SM4", 17),
        Pair("TEA", 18),
        Pair("XTEA", 19),
        Pair("Twofish", 20),
        Pair("RC2", 21),
        Pair("RC5", 22),
        Pair("RC6", 23),
        Pair("HC128", 24),
        Pair("HC256", 25),
        Pair("ChaCha", 26),
        Pair("Salsa20", 27),
        Pair("XSalsa20", 28),
        Pair("VMPC", 29),
        Pair("Grainv1", 30),
        Pair("ARIA", 32),
        Pair("DSTU7624", 36),
        Pair("GCM", 37),
        Pair("Threefish-256", 39),
        Pair("Threefish-512", 40),
        Pair("Threefish-1024", 41),
        Pair("GOST3412-2015", 42)
    )

    protected val cryptoCBCInput = mapOf<String, Byte>(
        Pair("ECB", 0),
        Pair("CBC", 1),
        Pair("OFB", 2),
        Pair("CFB", 3),
        Pair("CTR", 4),
        Pair("OpenPGPCFB", 5),
        Pair("CTS", 6),
        Pair("GOFB", 7),
        Pair("GCFB", 8),
        Pair("CCM", 9),
        Pair("EAX", 10),
        Pair("GCM", 11),
        Pair("OCB", 12)
    )

    protected val cryptoCBCOutput = mapOf<Byte, String>(
        Pair(0, "ECB"),
        Pair(1, "CBC"),
        Pair(2, "OFB"),
        Pair(3, "CFB"),
        Pair(4, "CTR"),
        Pair(5, "OpenPGPCFB"),
        Pair(6, "CTS"),
        Pair(7, "GOFB"),
        Pair(8, "GCFB"),
        Pair(9, "CCM"),
        Pair(10, "EAX"),
        Pair(11, "GCM"),
        Pair(12, "OCB")
    )

    protected val cryptoPaddingInput = mapOf<String, Byte>(
        Pair("NoPadding", 0),
        Pair("PKCS5Padding", 1),
        Pair("ISO10126Padding", 2),
        Pair("PKCS7Padding", 3),
        Pair("ISO10126-2Padding", 4),
        Pair("ISO7816-4Padding", 5),
        Pair("ISO9797-1Padding", 6),
        Pair("X923Padding", 7),
        Pair("X9.23Padding", 8),
        Pair("TBCPadding", 9),
        Pair("ZeroBytePadding", 10),
        Pair("withCTS", 11)
    )

    protected val cryptoPaddingOutput = mapOf<Byte, String>(
        Pair(0, "NoPadding"),
        Pair(1, "PKCS5Padding"),
        Pair(2, "ISO10126Padding"),
        Pair(3, "PKCS7Padding"),
        Pair(4, "ISO10126-2Padding"),
        Pair(5, "ISO7816-4Padding"),
        Pair(6, "ISO9797-1Padding"),
        Pair(7, "X923Padding"),
        Pair(8, "X9.23Padding"),
        Pair(9, "TBCPadding"),
        Pair(10, "ZeroBytePadding"),
        Pair(11, "withCTS")
    )


    protected
    val hashfunOutput = mapOf<Byte, String>(
        Pair(0, "MD5"),
        Pair(1, "SHA-1"),
        Pair(2, "SHA-256"),
        Pair(3, "SHA-512"),
        Pair(4, "GOST3411"),
        Pair(5, "GOST3411-2012-256"),
        Pair(6, "GOST3411-2012-512"),
        Pair(7, "KECCAK-224"),
        Pair(8, "KECCAK-288"),
        Pair(9, "KECCAK-256"),
        Pair(10, "KECCAK-384"),
        Pair(11, "KECCAK-512"),
        Pair(12, "MD2"),
        Pair(13, "MD4"),
        Pair(16, "RIPEMD128"),
        Pair(17, "RIPEMD160"),
        Pair(18, "RIPEMD256"),
        Pair(19, "RIPEMD320"),
        Pair(20, "SHA-224"),
        Pair(22, "SHA-384"),
        Pair(24, "SHA-512/224"),
        Pair(25, "SHA-512/256"),
        Pair(26, "SHA3-224"),
        Pair(27, "SHA3-256"),
        Pair(28, "SHA3-384"),
        Pair(29, "SHA3-512"),
        Pair(30, "2.16.840.1.101.3.4.2.7"),
        Pair(31, "OID.2.16.840.1.101.3.4.2.7"),
        Pair(32, "2.16.840.1.101.3.4.2.8"),
        Pair(33, "OID.2.16.840.1.101.3.4.2.8"),
        Pair(34, "2.16.840.1.101.3.4.2.9"),
        Pair(35, "OID.2.16.840.1.101.3.4.2.9"),
        Pair(36, "2.16.840.1.101.3.4.2.10"),
        Pair(37, "OID.2.16.840.1.101.3.4.2.10"),
        Pair(38, "Skein-256-128"),
        Pair(39, "Skein-256-160"),
        Pair(40, "Skein-256-224"),
        Pair(41, "Skein-256-256"),
        Pair(42, "Skein-512-128"),
        Pair(43, "Skein-512-160"),
        Pair(44, "Skein-512-224"),
        Pair(45, "Skein-512-256"),
        Pair(46, "Skein-512-384"),
        Pair(47, "Skein-512-512"),
        Pair(48, "Skein-1024-384"),
        Pair(49, "Skein-1024-512"),
        Pair(50, "Skein-1024-1024"),
        Pair(51, "SM3"),
        Pair(52, "TIGER"),
        Pair(53, "WHIRLPOOL"),
        Pair(54, "BLAKE2B-512"),
        Pair(55, "BLAKE2B-384"),
        Pair(56, "BLAKE2B-256"),
        Pair(57, "BLAKE2B-160"),
        Pair(58, "BLAKE2S-256"),
        Pair(59, "BLAKE2S-224"),
        Pair(60, "BLAKE2S-160"),
        Pair(61, "BLAKE2S-128"),
        Pair(62, "DSTU7564-256"),
        Pair(63, "DSTU7564-384"),
        Pair(64, "DSTU7564-512"),
        Pair(65, "1.2.804.2.1.1.1.1.2.2.1"),
        Pair(66, "OID.1.2.804.2.1.1.1.1.2.2.1"),
        Pair(67, "1.2.804.2.1.1.1.1.2.2.2"),
        Pair(68, "OID.1.2.804.2.1.1.1.1.2.2.2"),
        Pair(69, "1.2.804.2.1.1.1.1.2.2.3"),
        Pair(70, "OID.1.2.804.2.1.1.1.1.2.2.3"),
    )

    protected
    val cryptofunOutput = mapOf<Byte, String>(
        Pair(0, "AES"),
        Pair(1, "Blowfish"),
        Pair(2, "DES"),
        Pair(3, "DESede"),
        Pair(4, "RC4"),
        Pair(5, "Camellia"),
        Pair(6, "CAST5"),
        Pair(7, "CAST6"),
        Pair(8, "GOST28147"),
        Pair(9, "IDEA"),
        Pair(10, "Grain128"),
        Pair(11, "Noekeon"),
        Pair(12, "Rijndael"),
        Pair(13, "SEED"),
        Pair(14, "Shacal2"),
        Pair(15, "Serpent"),
        Pair(16, "Skipjack"),
        Pair(17, "SM4"),
        Pair(18, "TEA"),
        Pair(19, "XTEA"),
        Pair(20, "Twofish"),
        Pair(21, "RC2"),
        Pair(22, "RC5"),
        Pair(23, "RC6"),
        Pair(24, "HC128"),
        Pair(25, "HC256"),
        Pair(26, "ChaCha"),
        Pair(27, "Salsa20"),
        Pair(28, "XSalsa20"),
        Pair(29, "VMPC"),
        Pair(30, "Grainv1"),
        Pair(32, "ARIA"),
        Pair(36, "DSTU7624"),
        Pair(37, "GCM"),
        Pair(39, "Threefish-256"),
        Pair(40, "Threefish-512"),
        Pair(41, "Threefish-1024"),
        Pair(42, "GOST3412-2015")
    )

    protected
    val cipherStream = setOf(
        "HC128",
        "RC4",
        "HC256",
        "ChaCha",
        "Salsa20",
        "XSalsa20",
        "VMPC",
        "Grainv1",
        "Grain128",
        "Zuc128",
        "Zuc256"
    )
}